<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/css/style.css" />
    <script>
        const ROOM_ID="<%= roomId %>"
    </script>
    <script defer src="https://unpkg.com/peerjs@1.5.5/dist/peerjs.min.js"></script>
    <script src="/socket.io/socket.io.js" defer></script>
    <script src="script.js" defer></script>
</head>
<body>
    <button id="copyBtn" style="
  position: fixed;
  top: 10px;
  right: 10px;
  padding: 10px 15px;
  background-color: 
#162556;
  color: white;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-weight: bold;
">
  Copy Meeting ID
</button>

    <div id="video-grid"></div>
    <div id="sign-language-container">
        <div id="sign-language-box"></div>
        <div id="transcript"></div>
    </div>
    <script>
    window.onload = function () {
        document.getElementById("copyBtn").addEventListener("click", function () {
    if (ROOM_ID) {
        navigator.clipboard.writeText(ROOM_ID).then(() => {
            this.innerText = "Copied!";
            setTimeout(() => {
                this.innerText = "Copy Meeting ID";
            }, 1500);
        }).catch(err => {
            console.error("Failed to copy:", err);
        });
    }
});

        const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
        const recognition = new SpeechRecognition();

        recognition.interimResults = true;
        recognition.continuous = true;

        let transcriptDiv = document.getElementById("transcript");

        let clearTimer;

        recognition.onresult = (event) => {
            let currentTranscript = '';
            for (let i = event.resultIndex; i < event.results.length; ++i) {
                const transcript = event.results[i][0].transcript;
                currentTranscript += transcript;
            }

            transcriptDiv.innerText = currentTranscript;

            // Clear previous timer
            clearTimeout(clearTimer);

              showSignLanguageSequentially(currentTranscript);

            // Set timer to clear the text after 3 seconds
            clearTimer = setTimeout(() => {
                transcriptDiv.innerText = '';
            }, 1000);
        };
        


        function showSignLanguageSequentially(captionText) {
    const box = document.getElementById("sign-language-box");
    box.innerHTML = ""; // clear previous GIF

    const words = captionText.toLowerCase().trim();
    const img = document.createElement("img");
    img.style.width = "300px";
    box.appendChild(img);

    let index = 0;
    const signGifs = {
  "hello": "/gifs/hello.gif",
  "good morning": "/gifs/goodmorning.gif",
  "everyone": "/gifs/everyone.gif",
  //"thanks": "/gifs/thanks.gif",
  // add more words here
};


    function showNextGif() {
        if (index >= words.length) return;

        //const word = words[index];
        const gifPath = signGifs[words];

        img.src = gifPath;
        img.alt = word;

        img.onerror = () => {
            index++;
            showNextGif(); // skip if gif doesn't exist
        };

        index++;
        setTimeout(showNextGif, 2500); // show next after 2.5 sec
    }

    showNextGif();
}



        recognition.start();
    };
    </script>
</body>
</html>